# more details this workflow and other at https://github.com/didier-durand/gcloud-tests
name: Push image to Cloud Registry

on:
    push:
      branches: [ "main" ]
    pull_request:
      branches: [ "main" ]

env:
  GCP_VERBOSITY: warning
  GCR_IMAGE: gcr-alpine

jobs:
  push-to-GCR:
  
    runs-on: ubuntu-latest

    steps:
        
    - name: Checkout
      uses: actions/checkout@v2.3.4

    - name: Authenticate with Google Cloud
      uses: google-github-actions/auth@v0
    
      with:
        credentials_json: ${{ secrets.GCP_SA_KEY }}
        
    - name: Get gcloud version & info
      run: |-
        echo '--- gcloud version ---'
        gcloud version
        echo '--- gcloud info ---'
        gcloud info --anonymize
        
    - name: Configure Docker to use the gcloud command-line tool as a credential helper for authentication
      run: |-
        gcloud --quiet auth configure-docker
        
    - name: Build the alpine-based docker image
      run: |-
        docker build . --file Dockerfile -t "gcr.io/${{ secrets.GCP_PROJECT }}/$GCR_IMAGE:$GITHUB_SHA"
      
    - name: Push docker image to GCR
      run: |-
        docker push "gcr.io/${{ secrets.GCP_PROJECT }}/$GCR_IMAGE:$GITHUB_SHA"
        
    - name: Describe pushed GCR image
      run: |-
        gcloud container images describe "gcr.io/${{ secrets.GCP_PROJECT }}/$GCR_IMAGE:$GITHUB_SHA" --verbosity=$GCP_VERBOSITY --project=${{ secrets.GCP_PROJECT }} --quiet
        grep "digest: sha256:" <<< $(gcloud container images describe "gcr.io/${{ secrets.GCP_PROJECT }}/$GCR_IMAGE:$GITHUB_SHA" --verbosity=$GCP_VERBOSITY --project=${{ secrets.GCP_PROJECT }} --quiet)
   

    - name: Verify and install gke-gcloud-auth-plugin
      run: |
        if ! gcloud components list --filter=NAME:gke-gcloud-auth-plugin | grep -q "Installed"; then
          echo "gke-gcloud-auth-plugin not installed. Installing..."
          gcloud components install gke-gcloud-auth-plugin
        fi
      

    - name: Set USE_GKE_GCLOUD_AUTH_PLUGIN
      run: echo "export USE_GKE_GCLOUD_AUTH_PLUGIN=True" >> $GITHUB_ENV


    - name: Configure kubectl with cluster credentials
      run: |
        gcloud container clusters get-credentials ${{ secrets.GKE_CLUSTER }} --zone ${{ secrets.GKE_ZONE }}
        kubectl config use-context gke_${{ secrets.GCP_PROJECT }}_${{ secrets.GKE_ZONE }}_${{ secrets.GKE_CLUSTER }}
      env:
        KUBECONFIG: $HOME/.kube/config


      



            
      

    - name: Debug kubectl configurations
      run: kubectl config view

    - name: Deploy
      run: |
        cd deploy/k8s/
        kubectl apply -f deployment.yaml

    - name: Start Service
      run: |-
        cd deploy/k8s
        kubectl apply -f services.yaml  # Aplicar la configuraci√≥n del servicio        